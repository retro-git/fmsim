// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]

use diesel::prelude::*;
use crate::data::schema::*;

#[derive(Queryable, Debug)]
pub struct AnimType {
    pub id: i32,
    pub name: String,
}

#[derive(Queryable, Debug)]
pub struct CardType {
    pub id: i32,
    pub name: String,
    pub is_monster: i32,
}

#[derive(Queryable, Debug)]
pub struct Card {
    pub id: i32,
    pub name: String,
    pub description: String,
    pub guardian_star_a_id: i32,
    pub guardian_star_b_id: i32,
    pub level: i32,
    pub type_id: i32,
    pub attack: i32,
    pub defense: i32,
    pub stars: i32,
    pub card_code: i32,
    pub attribute: i32,
    pub name_color: i32,
    pub desc_color: i32,
    pub abc_sort: i32,
    pub max_sort: i32,
    pub atk_sort: i32,
    pub def_sort: i32,
    pub typ_sort: i32,
    pub ai_sort: i32,
    pub ai_gs: Option<i32>,
}

#[derive(Queryable, Debug)]
pub struct ChoiceType {
    pub id: i32,
    pub name: String,
    pub time_cost: i32,
}

#[derive(Queryable, Debug)]
pub struct Decomp {
    pub id: i32,
    pub animation_id: i32,
    pub choice_id: i32,
}

#[derive(Queryable, Debug)]
pub struct DuelistPool {
    pub id: i32,
    pub duelist_id: i32,
    pub pool_type_id: i32,
    pub card_id: i32,
    pub prob: i32,
}

#[derive(Queryable, Debug)]
pub struct Duelist {
    pub id: i32,
    pub name: String,
    pub is_mage: bool,
    pub hand_size: i32,
    pub low_lp_threshold: i32,
    pub critical_deck_size: i32,
    pub max_fusion_length: i32,
    pub max_improve_length: i32,
    pub spell_probability: String,
    pub attack_probability: String,
    pub find_best_combo_td: i32,
    pub improve_monster_td: i32,
    pub set_magic_td: i32,
    pub find_best_combo_no_td: i32,
    pub improve_monster_no_td: i32,
    pub set_magic_no_td: i32,
}

#[derive(Queryable, Debug)]
pub struct Equip {
    pub id: i32,
    pub equip_card_id: i32,
    pub card_id: i32,
}

#[derive(Queryable, Debug)]
pub struct FieldEffect {
    pub id: i32,
    pub field_type_id: i32,
    pub card_type_id: i32,
    pub relation: i32,
}

#[derive(Queryable, Debug)]
pub struct FieldType {
    pub id: i32,
    pub name: String,
}

#[derive(Queryable, Debug)]
pub struct FixedAdv {
    pub id: i32,
    pub animation_id: i32,
    pub initial_seed_index: i32,
}

#[derive(Queryable, Debug)]
pub struct Fusion {
    pub id: i32,
    pub card1_id: i32,
    pub card2_id: i32,
    pub result_card_id: i32,
}

#[derive(Queryable, Debug)]
pub struct GuardianStar {
    pub id: i32,
    pub name: String,
}

#[derive(Queryable, Debug)]
pub struct PoolType {
    pub id: i32,
    pub name: String,
}

#[derive(Queryable, Debug)]
pub struct Ritual {
    pub id: i32,
    pub ritual_card_id: i32,
    pub card1_id: i32,
    pub card2_id: i32,
    pub card3_id: i32,
    pub result_card_id: i32,
}

#[derive(Queryable, Debug)]
pub struct StarterGroup {
    pub id: i32,
    pub sample_size: i32,
}

#[derive(Queryable, Debug)]
pub struct StarterPool {
    pub id: i32,
    pub pool_id: i32,
    pub card_id: i32,
    pub prob: i32,
}

#[derive(Queryable, Debug)]
pub struct VariableAdv {
    pub id: i32,
    pub animation_id: i32,
    pub initial_seed_index: i32,
    pub advance_size: i32,
}

